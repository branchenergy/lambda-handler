[tool.poetry]
name = "lambda-handler"
version = "2.0.0"
description = "A Python package for routing and validating AWS events inside a Lambda function"
authors = ["Matthew Badger <matt@branchenergy.com>"]
homepage = "https://github.com/branchenergy/lambda-handler"
repository = "https://github.com/branchenergy/lambda-handler"
license = "Apache 2.0"
packages = [
  {include = "lambda_handler"},
  {include = "lambda_handler/py.typed"},
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^1.10.2"
typing-extensions = "^4.7.1"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pylint = "^2.15.5"
mypy = "^1.4.1"
mkdocs = "^1.3.0"
mkdocstrings = {extras = ["python"], version = "^0.19.0"}
mkdocs-material = "^8.3.3"
bumpversion = "^0.6.0"

[tool.poetry.group.fastapi.dependencies]
fastapi = "^0.99"
mangum = "^0.17"

[tool.poetry.extras]
fastapi = ["fastapi", "mangum"]

[tool.isort]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER", "TYPING"]
known_typing = ["typing", "typing_extensions"]
profile = "black"
multi_line_output = "3"

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "consider-using-f-string",        # Sometimes cleaner with many replacements
    "unnecessary-lambda-assignment",  # Ok, I disagree!
    "unnecessary-pass",               # Standard style for Protocols
    "too-few-public-methods",         # Confused by pydantic models
    "unsubscriptable-object",         # Confused by pydantic models
    "wrong-import-order",             # Handled by isort
    "invalid-name"                    # Calm down Pylint
]

[tool.pytest.ini_options]
addopts = "--cov=lambda_handler --cov-report term-missing"

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"
